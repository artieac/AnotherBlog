//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ABTestDbModel", "FK_BlogEntries_Blogs", "Blogs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogDTO), "BlogEntries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogEntryDTO), true)]
[assembly: EdmRelationshipAttribute("ABTestDbModel", "FK_BlogEntries_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.UserDTO), "BlogEntries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogEntryDTO), true)]
[assembly: EdmRelationshipAttribute("ABTestDbModel", "FK_BlogEntryTags_BlogEntries", "BlogEntries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogEntryDTO), "BlogEntryTags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogEntryTagDTO), true)]
[assembly: EdmRelationshipAttribute("ABTestDbModel", "FK_EntryComments_BlogEntries", "BlogEntries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogEntryDTO), "EntryComments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.EntryCommentDTO), true)]
[assembly: EdmRelationshipAttribute("ABTestDbModel", "FK_BlogEntryTags_Tags", "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.TagDTO), "BlogEntryTags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogEntryTagDTO), true)]
[assembly: EdmRelationshipAttribute("ABTestDbModel", "FK_BlogListItems_BlogList", "BlogLists", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListDTO), "BlogListItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO), true)]
[assembly: EdmRelationshipAttribute("ABTestDbModel", "FK_BlogList_Blogs", "Blogs", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogDTO), "BlogLists", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListDTO), true)]
[assembly: EdmRelationshipAttribute("ABTestDbModel", "FK_BlogLinks_Blogs", "Blogs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogDTO), "BlogRollLinks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogRollLinkDTO), true)]
[assembly: EdmRelationshipAttribute("ABTestDbModel", "FK_BlogUsers_Blogs", "Blogs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogDTO), "BlogUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogUserDTO), true)]
[assembly: EdmRelationshipAttribute("ABTestDbModel", "FK_EntryComments_Blogs", "Blogs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogDTO), "EntryComments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.EntryCommentDTO), true)]
[assembly: EdmRelationshipAttribute("ABTestDbModel", "FK_Tags_Blogs", "Blogs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogDTO), "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.TagDTO), true)]
[assembly: EdmRelationshipAttribute("ABTestDbModel", "FK_BlogUsers_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.RoleDTO), "BlogUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogUserDTO), true)]
[assembly: EdmRelationshipAttribute("ABTestDbModel", "FK_BlogUsers_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.UserDTO), "BlogUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogUserDTO), true)]

#endregion

namespace AlwaysMoveForward.AnotherBlog.DataLayer.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AnotherBlogDbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AnotherBlogDbEntities object using the connection string found in the 'AnotherBlogDbEntities' section of the application configuration file.
        /// </summary>
        public AnotherBlogDbEntities() : base("name=AnotherBlogDbEntities", "AnotherBlogDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AnotherBlogDbEntities object.
        /// </summary>
        public AnotherBlogDbEntities(string connectionString) : base(connectionString, "AnotherBlogDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AnotherBlogDbEntities object.
        /// </summary>
        public AnotherBlogDbEntities(EntityConnection connection) : base(connection, "AnotherBlogDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlogEntryDTO> BlogEntryDTOs
        {
            get
            {
                if ((_BlogEntryDTOs == null))
                {
                    _BlogEntryDTOs = base.CreateObjectSet<BlogEntryDTO>("BlogEntryDTOs");
                }
                return _BlogEntryDTOs;
            }
        }
        private ObjectSet<BlogEntryDTO> _BlogEntryDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlogEntryTagDTO> BlogEntryTagDTOs
        {
            get
            {
                if ((_BlogEntryTagDTOs == null))
                {
                    _BlogEntryTagDTOs = base.CreateObjectSet<BlogEntryTagDTO>("BlogEntryTagDTOs");
                }
                return _BlogEntryTagDTOs;
            }
        }
        private ObjectSet<BlogEntryTagDTO> _BlogEntryTagDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlogExtensionDTO> BlogExtensionDTOs
        {
            get
            {
                if ((_BlogExtensionDTOs == null))
                {
                    _BlogExtensionDTOs = base.CreateObjectSet<BlogExtensionDTO>("BlogExtensionDTOs");
                }
                return _BlogExtensionDTOs;
            }
        }
        private ObjectSet<BlogExtensionDTO> _BlogExtensionDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlogListItemDTO> BlogListItemDTOs
        {
            get
            {
                if ((_BlogListItemDTOs == null))
                {
                    _BlogListItemDTOs = base.CreateObjectSet<BlogListItemDTO>("BlogListItemDTOs");
                }
                return _BlogListItemDTOs;
            }
        }
        private ObjectSet<BlogListItemDTO> _BlogListItemDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlogListDTO> BlogListDTOs
        {
            get
            {
                if ((_BlogListDTOs == null))
                {
                    _BlogListDTOs = base.CreateObjectSet<BlogListDTO>("BlogListDTOs");
                }
                return _BlogListDTOs;
            }
        }
        private ObjectSet<BlogListDTO> _BlogListDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlogRollLinkDTO> BlogRollLinkDTOs
        {
            get
            {
                if ((_BlogRollLinkDTOs == null))
                {
                    _BlogRollLinkDTOs = base.CreateObjectSet<BlogRollLinkDTO>("BlogRollLinkDTOs");
                }
                return _BlogRollLinkDTOs;
            }
        }
        private ObjectSet<BlogRollLinkDTO> _BlogRollLinkDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlogDTO> BlogDTOs
        {
            get
            {
                if ((_BlogDTOs == null))
                {
                    _BlogDTOs = base.CreateObjectSet<BlogDTO>("BlogDTOs");
                }
                return _BlogDTOs;
            }
        }
        private ObjectSet<BlogDTO> _BlogDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlogUserDTO> BlogUserDTOs
        {
            get
            {
                if ((_BlogUserDTOs == null))
                {
                    _BlogUserDTOs = base.CreateObjectSet<BlogUserDTO>("BlogUserDTOs");
                }
                return _BlogUserDTOs;
            }
        }
        private ObjectSet<BlogUserDTO> _BlogUserDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DbInfoDTO> DbInfoDTOs
        {
            get
            {
                if ((_DbInfoDTOs == null))
                {
                    _DbInfoDTOs = base.CreateObjectSet<DbInfoDTO>("DbInfoDTOs");
                }
                return _DbInfoDTOs;
            }
        }
        private ObjectSet<DbInfoDTO> _DbInfoDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntryCommentDTO> EntryCommentDTOs
        {
            get
            {
                if ((_EntryCommentDTOs == null))
                {
                    _EntryCommentDTOs = base.CreateObjectSet<EntryCommentDTO>("EntryCommentDTOs");
                }
                return _EntryCommentDTOs;
            }
        }
        private ObjectSet<EntryCommentDTO> _EntryCommentDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExtensionConfigurationDTO> ExtensionConfigurationDTOs
        {
            get
            {
                if ((_ExtensionConfigurationDTOs == null))
                {
                    _ExtensionConfigurationDTOs = base.CreateObjectSet<ExtensionConfigurationDTO>("ExtensionConfigurationDTOs");
                }
                return _ExtensionConfigurationDTOs;
            }
        }
        private ObjectSet<ExtensionConfigurationDTO> _ExtensionConfigurationDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoleDTO> RoleDTOs
        {
            get
            {
                if ((_RoleDTOs == null))
                {
                    _RoleDTOs = base.CreateObjectSet<RoleDTO>("RoleDTOs");
                }
                return _RoleDTOs;
            }
        }
        private ObjectSet<RoleDTO> _RoleDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SiteInfoDTO> SiteInfoDTOs
        {
            get
            {
                if ((_SiteInfoDTOs == null))
                {
                    _SiteInfoDTOs = base.CreateObjectSet<SiteInfoDTO>("SiteInfoDTOs");
                }
                return _SiteInfoDTOs;
            }
        }
        private ObjectSet<SiteInfoDTO> _SiteInfoDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TagDTO> TagDTOs
        {
            get
            {
                if ((_TagDTOs == null))
                {
                    _TagDTOs = base.CreateObjectSet<TagDTO>("TagDTOs");
                }
                return _TagDTOs;
            }
        }
        private ObjectSet<TagDTO> _TagDTOs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserDTO> UserDTOs
        {
            get
            {
                if ((_UserDTOs == null))
                {
                    _UserDTOs = base.CreateObjectSet<UserDTO>("UserDTOs");
                }
                return _UserDTOs;
            }
        }
        private ObjectSet<UserDTO> _UserDTOs;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlogEntryDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogEntryDTOs(BlogEntryDTO blogEntryDTO)
        {
            base.AddObject("BlogEntryDTOs", blogEntryDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlogEntryTagDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogEntryTagDTOs(BlogEntryTagDTO blogEntryTagDTO)
        {
            base.AddObject("BlogEntryTagDTOs", blogEntryTagDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlogExtensionDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogExtensionDTOs(BlogExtensionDTO blogExtensionDTO)
        {
            base.AddObject("BlogExtensionDTOs", blogExtensionDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlogListItemDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogListItemDTOs(BlogListItemDTO blogListItemDTO)
        {
            base.AddObject("BlogListItemDTOs", blogListItemDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlogListDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogListDTOs(BlogListDTO blogListDTO)
        {
            base.AddObject("BlogListDTOs", blogListDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlogRollLinkDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogRollLinkDTOs(BlogRollLinkDTO blogRollLinkDTO)
        {
            base.AddObject("BlogRollLinkDTOs", blogRollLinkDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlogDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogDTOs(BlogDTO blogDTO)
        {
            base.AddObject("BlogDTOs", blogDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlogUserDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogUserDTOs(BlogUserDTO blogUserDTO)
        {
            base.AddObject("BlogUserDTOs", blogUserDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DbInfoDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDbInfoDTOs(DbInfoDTO dbInfoDTO)
        {
            base.AddObject("DbInfoDTOs", dbInfoDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntryCommentDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntryCommentDTOs(EntryCommentDTO entryCommentDTO)
        {
            base.AddObject("EntryCommentDTOs", entryCommentDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExtensionConfigurationDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExtensionConfigurationDTOs(ExtensionConfigurationDTO extensionConfigurationDTO)
        {
            base.AddObject("ExtensionConfigurationDTOs", extensionConfigurationDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoleDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoleDTOs(RoleDTO roleDTO)
        {
            base.AddObject("RoleDTOs", roleDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SiteInfoDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSiteInfoDTOs(SiteInfoDTO siteInfoDTO)
        {
            base.AddObject("SiteInfoDTOs", siteInfoDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TagDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTagDTOs(TagDTO tagDTO)
        {
            base.AddObject("TagDTOs", tagDTO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserDTOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserDTOs(UserDTO userDTO)
        {
            base.AddObject("UserDTOs", userDTO);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="BlogDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlogDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlogDTO object.
        /// </summary>
        /// <param name="blogId">Initial value of the BlogId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="subFolder">Initial value of the SubFolder property.</param>
        public static BlogDTO CreateBlogDTO(global::System.Int32 blogId, global::System.String name, global::System.String description, global::System.String subFolder)
        {
            BlogDTO blogDTO = new BlogDTO();
            blogDTO.BlogId = blogId;
            blogDTO.Name = name;
            blogDTO.Description = description;
            blogDTO.SubFolder = subFolder;
            return blogDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogId
        {
            get
            {
                return _BlogId;
            }
            set
            {
                if (_BlogId != value)
                {
                    OnBlogIdChanging(value);
                    ReportPropertyChanging("BlogId");
                    _BlogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlogId");
                    OnBlogIdChanged();
                }
            }
        }
        private global::System.Int32 _BlogId;
        partial void OnBlogIdChanging(global::System.Int32 value);
        partial void OnBlogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubFolder
        {
            get
            {
                return _SubFolder;
            }
            set
            {
                OnSubFolderChanging(value);
                ReportPropertyChanging("SubFolder");
                _SubFolder = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubFolder");
                OnSubFolderChanged();
            }
        }
        private global::System.String _SubFolder;
        partial void OnSubFolderChanging(global::System.String value);
        partial void OnSubFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String About
        {
            get
            {
                return _About;
            }
            set
            {
                OnAboutChanging(value);
                ReportPropertyChanging("About");
                _About = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("About");
                OnAboutChanged();
            }
        }
        private global::System.String _About;
        partial void OnAboutChanging(global::System.String value);
        partial void OnAboutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WelcomeMessage
        {
            get
            {
                return _WelcomeMessage;
            }
            set
            {
                OnWelcomeMessageChanging(value);
                ReportPropertyChanging("WelcomeMessage");
                _WelcomeMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WelcomeMessage");
                OnWelcomeMessageChanged();
            }
        }
        private global::System.String _WelcomeMessage;
        partial void OnWelcomeMessageChanging(global::System.String value);
        partial void OnWelcomeMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Theme
        {
            get
            {
                return _Theme;
            }
            set
            {
                OnThemeChanging(value);
                ReportPropertyChanging("Theme");
                _Theme = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Theme");
                OnThemeChanged();
            }
        }
        private global::System.String _Theme;
        partial void OnThemeChanging(global::System.String value);
        partial void OnThemeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogEntries_Blogs", "BlogEntries")]
        public EntityCollection<BlogEntryDTO> BlogEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlogEntryDTO>("ABTestDbModel.FK_BlogEntries_Blogs", "BlogEntries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlogEntryDTO>("ABTestDbModel.FK_BlogEntries_Blogs", "BlogEntries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogList_Blogs", "BlogLists")]
        public EntityCollection<BlogListDTO> BlogLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlogListDTO>("ABTestDbModel.FK_BlogList_Blogs", "BlogLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlogListDTO>("ABTestDbModel.FK_BlogList_Blogs", "BlogLists", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogLinks_Blogs", "BlogRollLinks")]
        public EntityCollection<BlogRollLinkDTO> BlogRollLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlogRollLinkDTO>("ABTestDbModel.FK_BlogLinks_Blogs", "BlogRollLinks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlogRollLinkDTO>("ABTestDbModel.FK_BlogLinks_Blogs", "BlogRollLinks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogUsers_Blogs", "BlogUsers")]
        public EntityCollection<BlogUserDTO> BlogUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlogUserDTO>("ABTestDbModel.FK_BlogUsers_Blogs", "BlogUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlogUserDTO>("ABTestDbModel.FK_BlogUsers_Blogs", "BlogUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_EntryComments_Blogs", "EntryComments")]
        public EntityCollection<EntryCommentDTO> EntryComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntryCommentDTO>("ABTestDbModel.FK_EntryComments_Blogs", "EntryComments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntryCommentDTO>("ABTestDbModel.FK_EntryComments_Blogs", "EntryComments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_Tags_Blogs", "Tags")]
        public EntityCollection<TagDTO> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagDTO>("ABTestDbModel.FK_Tags_Blogs", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagDTO>("ABTestDbModel.FK_Tags_Blogs", "Tags", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="BlogEntryDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlogEntryDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlogEntryDTO object.
        /// </summary>
        /// <param name="entryId">Initial value of the EntryId property.</param>
        /// <param name="entryText">Initial value of the EntryText property.</param>
        /// <param name="blogId">Initial value of the BlogId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="isPublished">Initial value of the IsPublished property.</param>
        /// <param name="datePosted">Initial value of the DatePosted property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="timesViewed">Initial value of the TimesViewed property.</param>
        public static BlogEntryDTO CreateBlogEntryDTO(global::System.Int32 entryId, global::System.String entryText, global::System.Int32 blogId, global::System.Int32 userId, global::System.String title, global::System.Boolean isPublished, global::System.DateTime datePosted, global::System.DateTime dateCreated, global::System.Int32 timesViewed)
        {
            BlogEntryDTO blogEntryDTO = new BlogEntryDTO();
            blogEntryDTO.EntryId = entryId;
            blogEntryDTO.EntryText = entryText;
            blogEntryDTO.BlogId = blogId;
            blogEntryDTO.UserId = userId;
            blogEntryDTO.Title = title;
            blogEntryDTO.IsPublished = isPublished;
            blogEntryDTO.DatePosted = datePosted;
            blogEntryDTO.DateCreated = dateCreated;
            blogEntryDTO.TimesViewed = timesViewed;
            return blogEntryDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryId
        {
            get
            {
                return _EntryId;
            }
            set
            {
                if (_EntryId != value)
                {
                    OnEntryIdChanging(value);
                    ReportPropertyChanging("EntryId");
                    _EntryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntryId");
                    OnEntryIdChanged();
                }
            }
        }
        private global::System.Int32 _EntryId;
        partial void OnEntryIdChanging(global::System.Int32 value);
        partial void OnEntryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EntryText
        {
            get
            {
                return _EntryText;
            }
            set
            {
                OnEntryTextChanging(value);
                ReportPropertyChanging("EntryText");
                _EntryText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EntryText");
                OnEntryTextChanged();
            }
        }
        private global::System.String _EntryText;
        partial void OnEntryTextChanging(global::System.String value);
        partial void OnEntryTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogId
        {
            get
            {
                return _BlogId;
            }
            set
            {
                OnBlogIdChanging(value);
                ReportPropertyChanging("BlogId");
                _BlogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogId");
                OnBlogIdChanged();
            }
        }
        private global::System.Int32 _BlogId;
        partial void OnBlogIdChanging(global::System.Int32 value);
        partial void OnBlogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublished
        {
            get
            {
                return _IsPublished;
            }
            set
            {
                OnIsPublishedChanging(value);
                ReportPropertyChanging("IsPublished");
                _IsPublished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublished");
                OnIsPublishedChanged();
            }
        }
        private global::System.Boolean _IsPublished;
        partial void OnIsPublishedChanging(global::System.Boolean value);
        partial void OnIsPublishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DatePosted
        {
            get
            {
                return _DatePosted;
            }
            set
            {
                OnDatePostedChanging(value);
                ReportPropertyChanging("DatePosted");
                _DatePosted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatePosted");
                OnDatePostedChanged();
            }
        }
        private global::System.DateTime _DatePosted;
        partial void OnDatePostedChanging(global::System.DateTime value);
        partial void OnDatePostedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TimesViewed
        {
            get
            {
                return _TimesViewed;
            }
            set
            {
                OnTimesViewedChanging(value);
                ReportPropertyChanging("TimesViewed");
                _TimesViewed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimesViewed");
                OnTimesViewedChanged();
            }
        }
        private global::System.Int32 _TimesViewed;
        partial void OnTimesViewedChanging(global::System.Int32 value);
        partial void OnTimesViewedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogEntries_Blogs", "Blogs")]
        public BlogDTO Blog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogEntries_Blogs", "Blogs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogEntries_Blogs", "Blogs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogDTO> BlogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogEntries_Blogs", "Blogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogEntries_Blogs", "Blogs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogEntries_Users", "Users")]
        public UserDTO Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDTO>("ABTestDbModel.FK_BlogEntries_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDTO>("ABTestDbModel.FK_BlogEntries_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserDTO> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDTO>("ABTestDbModel.FK_BlogEntries_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserDTO>("ABTestDbModel.FK_BlogEntries_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogEntryTags_BlogEntries", "BlogEntryTags")]
        public EntityCollection<BlogEntryTagDTO> BlogEntryTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlogEntryTagDTO>("ABTestDbModel.FK_BlogEntryTags_BlogEntries", "BlogEntryTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlogEntryTagDTO>("ABTestDbModel.FK_BlogEntryTags_BlogEntries", "BlogEntryTags", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_EntryComments_BlogEntries", "EntryComments")]
        public EntityCollection<EntryCommentDTO> EntryComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntryCommentDTO>("ABTestDbModel.FK_EntryComments_BlogEntries", "EntryComments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntryCommentDTO>("ABTestDbModel.FK_EntryComments_BlogEntries", "EntryComments", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="BlogEntryTagDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlogEntryTagDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlogEntryTagDTO object.
        /// </summary>
        /// <param name="tagId">Initial value of the TagId property.</param>
        /// <param name="blogEntryId">Initial value of the BlogEntryId property.</param>
        /// <param name="blogEntryTagId">Initial value of the BlogEntryTagId property.</param>
        public static BlogEntryTagDTO CreateBlogEntryTagDTO(global::System.Int32 tagId, global::System.Int32 blogEntryId, global::System.Int32 blogEntryTagId)
        {
            BlogEntryTagDTO blogEntryTagDTO = new BlogEntryTagDTO();
            blogEntryTagDTO.TagId = tagId;
            blogEntryTagDTO.BlogEntryId = blogEntryId;
            blogEntryTagDTO.BlogEntryTagId = blogEntryTagId;
            return blogEntryTagDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                OnTagIdChanging(value);
                ReportPropertyChanging("TagId");
                _TagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagId");
                OnTagIdChanged();
            }
        }
        private global::System.Int32 _TagId;
        partial void OnTagIdChanging(global::System.Int32 value);
        partial void OnTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogEntryId
        {
            get
            {
                return _BlogEntryId;
            }
            set
            {
                OnBlogEntryIdChanging(value);
                ReportPropertyChanging("BlogEntryId");
                _BlogEntryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogEntryId");
                OnBlogEntryIdChanged();
            }
        }
        private global::System.Int32 _BlogEntryId;
        partial void OnBlogEntryIdChanging(global::System.Int32 value);
        partial void OnBlogEntryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogEntryTagId
        {
            get
            {
                return _BlogEntryTagId;
            }
            set
            {
                if (_BlogEntryTagId != value)
                {
                    OnBlogEntryTagIdChanging(value);
                    ReportPropertyChanging("BlogEntryTagId");
                    _BlogEntryTagId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlogEntryTagId");
                    OnBlogEntryTagIdChanged();
                }
            }
        }
        private global::System.Int32 _BlogEntryTagId;
        partial void OnBlogEntryTagIdChanging(global::System.Int32 value);
        partial void OnBlogEntryTagIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogEntryTags_BlogEntries", "BlogEntries")]
        public BlogEntryDTO BlogEntry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogEntryDTO>("ABTestDbModel.FK_BlogEntryTags_BlogEntries", "BlogEntries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogEntryDTO>("ABTestDbModel.FK_BlogEntryTags_BlogEntries", "BlogEntries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogEntryDTO> BlogEntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogEntryDTO>("ABTestDbModel.FK_BlogEntryTags_BlogEntries", "BlogEntries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogEntryDTO>("ABTestDbModel.FK_BlogEntryTags_BlogEntries", "BlogEntries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogEntryTags_Tags", "Tags")]
        public TagDTO Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDTO>("ABTestDbModel.FK_BlogEntryTags_Tags", "Tags").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDTO>("ABTestDbModel.FK_BlogEntryTags_Tags", "Tags").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TagDTO> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDTO>("ABTestDbModel.FK_BlogEntryTags_Tags", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TagDTO>("ABTestDbModel.FK_BlogEntryTags_Tags", "Tags", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="BlogExtensionDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlogExtensionDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlogExtensionDTO object.
        /// </summary>
        /// <param name="assemblyName">Initial value of the AssemblyName property.</param>
        /// <param name="pageLocation">Initial value of the PageLocation property.</param>
        /// <param name="extensionId">Initial value of the ExtensionId property.</param>
        /// <param name="sectionOrder">Initial value of the SectionOrder property.</param>
        /// <param name="className">Initial value of the ClassName property.</param>
        public static BlogExtensionDTO CreateBlogExtensionDTO(global::System.String assemblyName, global::System.Int32 pageLocation, global::System.Int32 extensionId, global::System.Int32 sectionOrder, global::System.String className)
        {
            BlogExtensionDTO blogExtensionDTO = new BlogExtensionDTO();
            blogExtensionDTO.AssemblyName = assemblyName;
            blogExtensionDTO.PageLocation = pageLocation;
            blogExtensionDTO.ExtensionId = extensionId;
            blogExtensionDTO.SectionOrder = sectionOrder;
            blogExtensionDTO.ClassName = className;
            return blogExtensionDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssemblyName
        {
            get
            {
                return _AssemblyName;
            }
            set
            {
                OnAssemblyNameChanging(value);
                ReportPropertyChanging("AssemblyName");
                _AssemblyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssemblyName");
                OnAssemblyNameChanged();
            }
        }
        private global::System.String _AssemblyName;
        partial void OnAssemblyNameChanging(global::System.String value);
        partial void OnAssemblyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageLocation
        {
            get
            {
                return _PageLocation;
            }
            set
            {
                OnPageLocationChanging(value);
                ReportPropertyChanging("PageLocation");
                _PageLocation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PageLocation");
                OnPageLocationChanged();
            }
        }
        private global::System.Int32 _PageLocation;
        partial void OnPageLocationChanging(global::System.Int32 value);
        partial void OnPageLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExtensionId
        {
            get
            {
                return _ExtensionId;
            }
            set
            {
                if (_ExtensionId != value)
                {
                    OnExtensionIdChanging(value);
                    ReportPropertyChanging("ExtensionId");
                    _ExtensionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExtensionId");
                    OnExtensionIdChanged();
                }
            }
        }
        private global::System.Int32 _ExtensionId;
        partial void OnExtensionIdChanging(global::System.Int32 value);
        partial void OnExtensionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SectionOrder
        {
            get
            {
                return _SectionOrder;
            }
            set
            {
                OnSectionOrderChanging(value);
                ReportPropertyChanging("SectionOrder");
                _SectionOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SectionOrder");
                OnSectionOrderChanged();
            }
        }
        private global::System.Int32 _SectionOrder;
        partial void OnSectionOrderChanging(global::System.Int32 value);
        partial void OnSectionOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassName
        {
            get
            {
                return _ClassName;
            }
            set
            {
                OnClassNameChanging(value);
                ReportPropertyChanging("ClassName");
                _ClassName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClassName");
                OnClassNameChanged();
            }
        }
        private global::System.String _ClassName;
        partial void OnClassNameChanging(global::System.String value);
        partial void OnClassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssemblyPath
        {
            get
            {
                return _AssemblyPath;
            }
            set
            {
                OnAssemblyPathChanging(value);
                ReportPropertyChanging("AssemblyPath");
                _AssemblyPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssemblyPath");
                OnAssemblyPathChanged();
            }
        }
        private global::System.String _AssemblyPath;
        partial void OnAssemblyPathChanging(global::System.String value);
        partial void OnAssemblyPathChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="BlogListDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlogListDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlogListDTO object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="showOrdered">Initial value of the ShowOrdered property.</param>
        public static BlogListDTO CreateBlogListDTO(global::System.Int32 id, global::System.Boolean showOrdered)
        {
            BlogListDTO blogListDTO = new BlogListDTO();
            blogListDTO.Id = id;
            blogListDTO.ShowOrdered = showOrdered;
            return blogListDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BlogId
        {
            get
            {
                return _BlogId;
            }
            set
            {
                OnBlogIdChanging(value);
                ReportPropertyChanging("BlogId");
                _BlogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogId");
                OnBlogIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BlogId;
        partial void OnBlogIdChanging(Nullable<global::System.Int32> value);
        partial void OnBlogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowOrdered
        {
            get
            {
                return _ShowOrdered;
            }
            set
            {
                OnShowOrderedChanging(value);
                ReportPropertyChanging("ShowOrdered");
                _ShowOrdered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowOrdered");
                OnShowOrderedChanged();
            }
        }
        private global::System.Boolean _ShowOrdered;
        partial void OnShowOrderedChanging(global::System.Boolean value);
        partial void OnShowOrderedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogListItems_BlogList", "BlogListItems")]
        public EntityCollection<BlogListItemDTO> BlogListItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlogListItemDTO>("ABTestDbModel.FK_BlogListItems_BlogList", "BlogListItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlogListItemDTO>("ABTestDbModel.FK_BlogListItems_BlogList", "BlogListItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogList_Blogs", "Blogs")]
        public BlogDTO Blog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogList_Blogs", "Blogs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogList_Blogs", "Blogs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogDTO> BlogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogList_Blogs", "Blogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogList_Blogs", "Blogs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="BlogListItemDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlogListItemDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlogListItemDTO object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="displayOrder">Initial value of the DisplayOrder property.</param>
        public static BlogListItemDTO CreateBlogListItemDTO(global::System.Int32 id, global::System.Int32 displayOrder)
        {
            BlogListItemDTO blogListItemDTO = new BlogListItemDTO();
            blogListItemDTO.Id = id;
            blogListItemDTO.DisplayOrder = displayOrder;
            return blogListItemDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelatedLink
        {
            get
            {
                return _RelatedLink;
            }
            set
            {
                OnRelatedLinkChanging(value);
                ReportPropertyChanging("RelatedLink");
                _RelatedLink = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelatedLink");
                OnRelatedLinkChanged();
            }
        }
        private global::System.String _RelatedLink;
        partial void OnRelatedLinkChanging(global::System.String value);
        partial void OnRelatedLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BlogListId
        {
            get
            {
                return _BlogListId;
            }
            set
            {
                OnBlogListIdChanging(value);
                ReportPropertyChanging("BlogListId");
                _BlogListId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogListId");
                OnBlogListIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BlogListId;
        partial void OnBlogListIdChanging(Nullable<global::System.Int32> value);
        partial void OnBlogListIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogListItems_BlogList", "BlogLists")]
        public BlogListDTO BlogList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogListDTO>("ABTestDbModel.FK_BlogListItems_BlogList", "BlogLists").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogListDTO>("ABTestDbModel.FK_BlogListItems_BlogList", "BlogLists").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogListDTO> BlogListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogListDTO>("ABTestDbModel.FK_BlogListItems_BlogList", "BlogLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogListDTO>("ABTestDbModel.FK_BlogListItems_BlogList", "BlogLists", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="BlogRollLinkDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlogRollLinkDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlogRollLinkDTO object.
        /// </summary>
        /// <param name="linkName">Initial value of the LinkName property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="blogId">Initial value of the BlogId property.</param>
        /// <param name="blogRollLinkId">Initial value of the BlogRollLinkId property.</param>
        public static BlogRollLinkDTO CreateBlogRollLinkDTO(global::System.String linkName, global::System.String url, global::System.Int32 blogId, global::System.Int32 blogRollLinkId)
        {
            BlogRollLinkDTO blogRollLinkDTO = new BlogRollLinkDTO();
            blogRollLinkDTO.LinkName = linkName;
            blogRollLinkDTO.Url = url;
            blogRollLinkDTO.BlogId = blogId;
            blogRollLinkDTO.BlogRollLinkId = blogRollLinkId;
            return blogRollLinkDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LinkName
        {
            get
            {
                return _LinkName;
            }
            set
            {
                OnLinkNameChanging(value);
                ReportPropertyChanging("LinkName");
                _LinkName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LinkName");
                OnLinkNameChanged();
            }
        }
        private global::System.String _LinkName;
        partial void OnLinkNameChanging(global::System.String value);
        partial void OnLinkNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogId
        {
            get
            {
                return _BlogId;
            }
            set
            {
                OnBlogIdChanging(value);
                ReportPropertyChanging("BlogId");
                _BlogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogId");
                OnBlogIdChanged();
            }
        }
        private global::System.Int32 _BlogId;
        partial void OnBlogIdChanging(global::System.Int32 value);
        partial void OnBlogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogRollLinkId
        {
            get
            {
                return _BlogRollLinkId;
            }
            set
            {
                if (_BlogRollLinkId != value)
                {
                    OnBlogRollLinkIdChanging(value);
                    ReportPropertyChanging("BlogRollLinkId");
                    _BlogRollLinkId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlogRollLinkId");
                    OnBlogRollLinkIdChanged();
                }
            }
        }
        private global::System.Int32 _BlogRollLinkId;
        partial void OnBlogRollLinkIdChanging(global::System.Int32 value);
        partial void OnBlogRollLinkIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogLinks_Blogs", "Blogs")]
        public BlogDTO Blog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogLinks_Blogs", "Blogs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogLinks_Blogs", "Blogs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogDTO> BlogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogLinks_Blogs", "Blogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogLinks_Blogs", "Blogs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="BlogUserDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlogUserDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlogUserDTO object.
        /// </summary>
        /// <param name="blogId">Initial value of the BlogId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="blogUserId">Initial value of the BlogUserId property.</param>
        public static BlogUserDTO CreateBlogUserDTO(global::System.Int32 blogId, global::System.Int32 userId, global::System.Int32 roleId, global::System.Int32 blogUserId)
        {
            BlogUserDTO blogUserDTO = new BlogUserDTO();
            blogUserDTO.BlogId = blogId;
            blogUserDTO.UserId = userId;
            blogUserDTO.RoleId = roleId;
            blogUserDTO.BlogUserId = blogUserId;
            return blogUserDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogId
        {
            get
            {
                return _BlogId;
            }
            set
            {
                OnBlogIdChanging(value);
                ReportPropertyChanging("BlogId");
                _BlogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogId");
                OnBlogIdChanged();
            }
        }
        private global::System.Int32 _BlogId;
        partial void OnBlogIdChanging(global::System.Int32 value);
        partial void OnBlogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogUserId
        {
            get
            {
                return _BlogUserId;
            }
            set
            {
                if (_BlogUserId != value)
                {
                    OnBlogUserIdChanging(value);
                    ReportPropertyChanging("BlogUserId");
                    _BlogUserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlogUserId");
                    OnBlogUserIdChanged();
                }
            }
        }
        private global::System.Int32 _BlogUserId;
        partial void OnBlogUserIdChanging(global::System.Int32 value);
        partial void OnBlogUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogUsers_Blogs", "Blogs")]
        public BlogDTO Blog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogUsers_Blogs", "Blogs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogUsers_Blogs", "Blogs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogDTO> BlogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogUsers_Blogs", "Blogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogDTO>("ABTestDbModel.FK_BlogUsers_Blogs", "Blogs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogUsers_Roles", "Roles")]
        public RoleDTO Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleDTO>("ABTestDbModel.FK_BlogUsers_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleDTO>("ABTestDbModel.FK_BlogUsers_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoleDTO> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleDTO>("ABTestDbModel.FK_BlogUsers_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoleDTO>("ABTestDbModel.FK_BlogUsers_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogUsers_Users", "Users")]
        public UserDTO User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDTO>("ABTestDbModel.FK_BlogUsers_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDTO>("ABTestDbModel.FK_BlogUsers_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserDTO> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDTO>("ABTestDbModel.FK_BlogUsers_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserDTO>("ABTestDbModel.FK_BlogUsers_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="DbInfoDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DbInfoDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DbInfoDTO object.
        /// </summary>
        /// <param name="version">Initial value of the Version property.</param>
        public static DbInfoDTO CreateDbInfoDTO(global::System.Int32 version)
        {
            DbInfoDTO dbInfoDTO = new DbInfoDTO();
            dbInfoDTO.Version = version;
            return dbInfoDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                if (_Version != value)
                {
                    OnVersionChanging(value);
                    ReportPropertyChanging("Version");
                    _Version = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Version");
                    OnVersionChanged();
                }
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="EntryCommentDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntryCommentDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntryCommentDTO object.
        /// </summary>
        /// <param name="commentId">Initial value of the CommentId property.</param>
        /// <param name="entryId">Initial value of the EntryId property.</param>
        /// <param name="authorEmail">Initial value of the AuthorEmail property.</param>
        /// <param name="blogId">Initial value of the BlogId property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        /// <param name="authorName">Initial value of the AuthorName property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="datePosted">Initial value of the DatePosted property.</param>
        public static EntryCommentDTO CreateEntryCommentDTO(global::System.Int32 commentId, global::System.Int32 entryId, global::System.String authorEmail, global::System.Int32 blogId, global::System.String comment, global::System.String authorName, global::System.Int32 status, global::System.DateTime datePosted)
        {
            EntryCommentDTO entryCommentDTO = new EntryCommentDTO();
            entryCommentDTO.CommentId = commentId;
            entryCommentDTO.EntryId = entryId;
            entryCommentDTO.AuthorEmail = authorEmail;
            entryCommentDTO.BlogId = blogId;
            entryCommentDTO.Comment = comment;
            entryCommentDTO.AuthorName = authorName;
            entryCommentDTO.Status = status;
            entryCommentDTO.DatePosted = datePosted;
            return entryCommentDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentId
        {
            get
            {
                return _CommentId;
            }
            set
            {
                if (_CommentId != value)
                {
                    OnCommentIdChanging(value);
                    ReportPropertyChanging("CommentId");
                    _CommentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommentId");
                    OnCommentIdChanged();
                }
            }
        }
        private global::System.Int32 _CommentId;
        partial void OnCommentIdChanging(global::System.Int32 value);
        partial void OnCommentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryId
        {
            get
            {
                return _EntryId;
            }
            set
            {
                OnEntryIdChanging(value);
                ReportPropertyChanging("EntryId");
                _EntryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryId");
                OnEntryIdChanged();
            }
        }
        private global::System.Int32 _EntryId;
        partial void OnEntryIdChanging(global::System.Int32 value);
        partial void OnEntryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuthorEmail
        {
            get
            {
                return _AuthorEmail;
            }
            set
            {
                OnAuthorEmailChanging(value);
                ReportPropertyChanging("AuthorEmail");
                _AuthorEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuthorEmail");
                OnAuthorEmailChanged();
            }
        }
        private global::System.String _AuthorEmail;
        partial void OnAuthorEmailChanging(global::System.String value);
        partial void OnAuthorEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RelatedComment
        {
            get
            {
                return _RelatedComment;
            }
            set
            {
                OnRelatedCommentChanging(value);
                ReportPropertyChanging("RelatedComment");
                _RelatedComment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelatedComment");
                OnRelatedCommentChanged();
            }
        }
        private Nullable<global::System.Int32> _RelatedComment;
        partial void OnRelatedCommentChanging(Nullable<global::System.Int32> value);
        partial void OnRelatedCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogId
        {
            get
            {
                return _BlogId;
            }
            set
            {
                OnBlogIdChanging(value);
                ReportPropertyChanging("BlogId");
                _BlogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogId");
                OnBlogIdChanged();
            }
        }
        private global::System.Int32 _BlogId;
        partial void OnBlogIdChanging(global::System.Int32 value);
        partial void OnBlogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuthorName
        {
            get
            {
                return _AuthorName;
            }
            set
            {
                OnAuthorNameChanging(value);
                ReportPropertyChanging("AuthorName");
                _AuthorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuthorName");
                OnAuthorNameChanged();
            }
        }
        private global::System.String _AuthorName;
        partial void OnAuthorNameChanging(global::System.String value);
        partial void OnAuthorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DatePosted
        {
            get
            {
                return _DatePosted;
            }
            set
            {
                OnDatePostedChanging(value);
                ReportPropertyChanging("DatePosted");
                _DatePosted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatePosted");
                OnDatePostedChanged();
            }
        }
        private global::System.DateTime _DatePosted;
        partial void OnDatePostedChanging(global::System.DateTime value);
        partial void OnDatePostedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_EntryComments_BlogEntries", "BlogEntries")]
        public BlogEntryDTO BlogEntry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogEntryDTO>("ABTestDbModel.FK_EntryComments_BlogEntries", "BlogEntries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogEntryDTO>("ABTestDbModel.FK_EntryComments_BlogEntries", "BlogEntries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogEntryDTO> BlogEntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogEntryDTO>("ABTestDbModel.FK_EntryComments_BlogEntries", "BlogEntries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogEntryDTO>("ABTestDbModel.FK_EntryComments_BlogEntries", "BlogEntries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_EntryComments_Blogs", "Blogs")]
        public BlogDTO Blog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_EntryComments_Blogs", "Blogs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_EntryComments_Blogs", "Blogs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogDTO> BlogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_EntryComments_Blogs", "Blogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogDTO>("ABTestDbModel.FK_EntryComments_Blogs", "Blogs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="ExtensionConfigurationDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExtensionConfigurationDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExtensionConfigurationDTO object.
        /// </summary>
        /// <param name="extensionId">Initial value of the ExtensionId property.</param>
        /// <param name="configurationId">Initial value of the ConfigurationId property.</param>
        public static ExtensionConfigurationDTO CreateExtensionConfigurationDTO(global::System.Int32 extensionId, global::System.Int32 configurationId)
        {
            ExtensionConfigurationDTO extensionConfigurationDTO = new ExtensionConfigurationDTO();
            extensionConfigurationDTO.ExtensionId = extensionId;
            extensionConfigurationDTO.ConfigurationId = configurationId;
            return extensionConfigurationDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExtensionId
        {
            get
            {
                return _ExtensionId;
            }
            set
            {
                OnExtensionIdChanging(value);
                ReportPropertyChanging("ExtensionId");
                _ExtensionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExtensionId");
                OnExtensionIdChanged();
            }
        }
        private global::System.Int32 _ExtensionId;
        partial void OnExtensionIdChanging(global::System.Int32 value);
        partial void OnExtensionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConfigurationId
        {
            get
            {
                return _ConfigurationId;
            }
            set
            {
                if (_ConfigurationId != value)
                {
                    OnConfigurationIdChanging(value);
                    ReportPropertyChanging("ConfigurationId");
                    _ConfigurationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConfigurationId");
                    OnConfigurationIdChanged();
                }
            }
        }
        private global::System.Int32 _ConfigurationId;
        partial void OnConfigurationIdChanging(global::System.Int32 value);
        partial void OnConfigurationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExtensionSettings
        {
            get
            {
                return _ExtensionSettings;
            }
            set
            {
                OnExtensionSettingsChanging(value);
                ReportPropertyChanging("ExtensionSettings");
                _ExtensionSettings = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExtensionSettings");
                OnExtensionSettingsChanged();
            }
        }
        private global::System.String _ExtensionSettings;
        partial void OnExtensionSettingsChanging(global::System.String value);
        partial void OnExtensionSettingsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="RoleDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoleDTO object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static RoleDTO CreateRoleDTO(global::System.Int32 roleId, global::System.String name)
        {
            RoleDTO roleDTO = new RoleDTO();
            roleDTO.RoleId = roleId;
            roleDTO.Name = name;
            return roleDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogUsers_Roles", "BlogUsers")]
        public EntityCollection<BlogUserDTO> BlogUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlogUserDTO>("ABTestDbModel.FK_BlogUsers_Roles", "BlogUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlogUserDTO>("ABTestDbModel.FK_BlogUsers_Roles", "BlogUsers", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="SiteInfoDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SiteInfoDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SiteInfoDTO object.
        /// </summary>
        /// <param name="about">Initial value of the About property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="siteId">Initial value of the SiteId property.</param>
        public static SiteInfoDTO CreateSiteInfoDTO(global::System.String about, global::System.String name, global::System.String url, global::System.Int32 siteId)
        {
            SiteInfoDTO siteInfoDTO = new SiteInfoDTO();
            siteInfoDTO.About = about;
            siteInfoDTO.Name = name;
            siteInfoDTO.Url = url;
            siteInfoDTO.SiteId = siteId;
            return siteInfoDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String About
        {
            get
            {
                return _About;
            }
            set
            {
                OnAboutChanging(value);
                ReportPropertyChanging("About");
                _About = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("About");
                OnAboutChanged();
            }
        }
        private global::System.String _About;
        partial void OnAboutChanging(global::System.String value);
        partial void OnAboutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteId
        {
            get
            {
                return _SiteId;
            }
            set
            {
                if (_SiteId != value)
                {
                    OnSiteIdChanging(value);
                    ReportPropertyChanging("SiteId");
                    _SiteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SiteId");
                    OnSiteIdChanged();
                }
            }
        }
        private global::System.Int32 _SiteId;
        partial void OnSiteIdChanging(global::System.Int32 value);
        partial void OnSiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultTheme
        {
            get
            {
                return _DefaultTheme;
            }
            set
            {
                OnDefaultThemeChanging(value);
                ReportPropertyChanging("DefaultTheme");
                _DefaultTheme = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultTheme");
                OnDefaultThemeChanged();
            }
        }
        private global::System.String _DefaultTheme;
        partial void OnDefaultThemeChanging(global::System.String value);
        partial void OnDefaultThemeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteAnalyticsId
        {
            get
            {
                return _SiteAnalyticsId;
            }
            set
            {
                OnSiteAnalyticsIdChanging(value);
                ReportPropertyChanging("SiteAnalyticsId");
                _SiteAnalyticsId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteAnalyticsId");
                OnSiteAnalyticsIdChanged();
            }
        }
        private global::System.String _SiteAnalyticsId;
        partial void OnSiteAnalyticsIdChanging(global::System.String value);
        partial void OnSiteAnalyticsIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="TagDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TagDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TagDTO object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="blogId">Initial value of the BlogId property.</param>
        public static TagDTO CreateTagDTO(global::System.String name, global::System.Int32 id, global::System.Int32 blogId)
        {
            TagDTO tagDTO = new TagDTO();
            tagDTO.name = name;
            tagDTO.id = id;
            tagDTO.BlogId = blogId;
            return tagDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogId
        {
            get
            {
                return _BlogId;
            }
            set
            {
                OnBlogIdChanging(value);
                ReportPropertyChanging("BlogId");
                _BlogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogId");
                OnBlogIdChanged();
            }
        }
        private global::System.Int32 _BlogId;
        partial void OnBlogIdChanging(global::System.Int32 value);
        partial void OnBlogIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogEntryTags_Tags", "BlogEntryTags")]
        public EntityCollection<BlogEntryTagDTO> BlogEntryTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlogEntryTagDTO>("ABTestDbModel.FK_BlogEntryTags_Tags", "BlogEntryTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlogEntryTagDTO>("ABTestDbModel.FK_BlogEntryTags_Tags", "BlogEntryTags", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_Tags_Blogs", "Blogs")]
        public BlogDTO Blog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_Tags_Blogs", "Blogs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_Tags_Blogs", "Blogs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogDTO> BlogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogDTO>("ABTestDbModel.FK_Tags_Blogs", "Blogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogDTO>("ABTestDbModel.FK_Tags_Blogs", "Blogs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABTestDbModel", Name="UserDTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserDTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserDTO object.
        /// </summary>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="approvedCommenter">Initial value of the ApprovedCommenter property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isSiteAdministrator">Initial value of the IsSiteAdministrator property.</param>
        public static UserDTO CreateUserDTO(global::System.String userName, global::System.String password, global::System.Int32 userId, global::System.String email, global::System.Boolean approvedCommenter, global::System.Boolean isActive, global::System.Boolean isSiteAdministrator)
        {
            UserDTO userDTO = new UserDTO();
            userDTO.UserName = userName;
            userDTO.Password = password;
            userDTO.UserId = userId;
            userDTO.Email = email;
            userDTO.ApprovedCommenter = approvedCommenter;
            userDTO.IsActive = isActive;
            userDTO.IsSiteAdministrator = isSiteAdministrator;
            return userDTO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ApprovedCommenter
        {
            get
            {
                return _ApprovedCommenter;
            }
            set
            {
                OnApprovedCommenterChanging(value);
                ReportPropertyChanging("ApprovedCommenter");
                _ApprovedCommenter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedCommenter");
                OnApprovedCommenterChanged();
            }
        }
        private global::System.Boolean _ApprovedCommenter;
        partial void OnApprovedCommenterChanging(global::System.Boolean value);
        partial void OnApprovedCommenterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSiteAdministrator
        {
            get
            {
                return _IsSiteAdministrator;
            }
            set
            {
                OnIsSiteAdministratorChanging(value);
                ReportPropertyChanging("IsSiteAdministrator");
                _IsSiteAdministrator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSiteAdministrator");
                OnIsSiteAdministratorChanged();
            }
        }
        private global::System.Boolean _IsSiteAdministrator;
        partial void OnIsSiteAdministratorChanging(global::System.Boolean value);
        partial void OnIsSiteAdministratorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String About
        {
            get
            {
                return _About;
            }
            set
            {
                OnAboutChanging(value);
                ReportPropertyChanging("About");
                _About = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("About");
                OnAboutChanged();
            }
        }
        private global::System.String _About;
        partial void OnAboutChanging(global::System.String value);
        partial void OnAboutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogEntries_Users", "BlogEntries")]
        public EntityCollection<BlogEntryDTO> BlogEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlogEntryDTO>("ABTestDbModel.FK_BlogEntries_Users", "BlogEntries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlogEntryDTO>("ABTestDbModel.FK_BlogEntries_Users", "BlogEntries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABTestDbModel", "FK_BlogUsers_Users", "BlogUsers")]
        public EntityCollection<BlogUserDTO> BlogUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlogUserDTO>("ABTestDbModel.FK_BlogUsers_Users", "BlogUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlogUserDTO>("ABTestDbModel.FK_BlogUsers_Users", "BlogUsers", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
