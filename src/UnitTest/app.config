<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" requirePermission="false"/>
    <section name="activeRecord" type="Castle.ActiveRecord.Framework.Config.ActiveRecordSectionHandler, Castle.ActiveRecord" requirePermission="false"/>
    <sectionGroup name="AlwaysMoveForward">
      <section name="DatabaseConfiguration" type="AlwaysMoveForward.Common.Configuration.DatabaseConfiguration, AlwaysMoveForward.Common" requirePermission="false"/>
      <section name="EmailConfiguration" type="AlwaysMoveForward.Common.Configuration.EmailConfiguration, AlwaysMoveForward.Common" requirePermission="false"/>
      <section name="LoggingConfiguration" type="AlwaysMoveForward.Common.Configuration.LoggingConfiguration, AlwaysMoveForward.Common" requirePermission="false"/>
      <section name="RepositoryConfiguration" type="AlwaysMoveForward.Common.Configuration.RepositoryConfiguration, AlwaysMoveForward.Common" requirePermission="false"/>
    </sectionGroup>
    <sectionGroup name="MOQ">
      <section name="RepositoryConfiguration" type="AlwaysMoveForward.Common.Configuration.RepositoryConfiguration, AlwaysMoveForward.Common" requirePermission="false"/>
    </sectionGroup>
    <sectionGroup name="AnotherBlog">
      <section name="WebSiteConfiguration" type="AlwaysMoveForward.AnotherBlog.Web.Code.Utilities.WebSiteConfiguration, AlwaysMoveForward.AnotherBlog.Web" requirePermission="false"/>
    </sectionGroup>
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" requirePermission="false"/>
    <sectionGroup name="system.web.webPages.razor" type="System.Web.WebPages.Razor.Configuration.RazorWebSectionGroup, System.Web.WebPages.Razor, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
      <section name="host" type="System.Web.WebPages.Razor.Configuration.HostSection, System.Web.WebPages.Razor, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" />
      <section name="pages" type="System.Web.WebPages.Razor.Configuration.RazorPagesSection, System.Web.WebPages.Razor, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <session-factory>
      <property name="connection.provider">NHibernate.Connection.DriverConnectionProvider</property>
      <property name="dialect">NHibernate.Dialect.MsSql2005Dialect</property>
      <property name="connection.driver_class">NHibernate.Driver.SqlClientDriver, NHibernate</property>
      <property name="connection.connection_string">Data Source=localhost\DBLocal; Initial Catalog=AMForwardDb; User ID=test; Password=test;</property> 
<!--      <property name="connection.connection_string">Data Source=localhost; Initial Catalog=AMForwardDb; User ID=test; Password=test;</property> -->
      <property name="proxyfactory.factory_class">NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
    </session-factory>
  </hibernate-configuration>
  <activeRecord isWeb="false">
    <config>
      <add key="connection.provider" value="NHibernate.Connection.DriverConnectionProvider"/>
      <add key="dialect" value="NHibernate.Dialect.MsSql2005Dialect"/>
      <add key="connection.driver_class" value="NHibernate.Driver.SqlClientDriver, NHibernate "/>
      <add key="connection.connection_string" value="Data Source=localhost\DBLocal; Initial Catalog=AMForwardDb; User ID=test; Password=test;"/>
      <!--      <add key="connection.connection_string" value="Data Source=localhost; Initial Catalog=AMForwardDb; User ID=test; Password=test;"/> -->
      <add key="hibernate.connection.provider" value="NHibernate.Connection.DriverConnectionProvider"/>
      <add key="hibernate.dialect" value="NHibernate.Dialect.MsSql2005Dialect"/>
      <add key="hibernate.connection.driver_class" value="NHibernate.Driver.SqlClientDriver, NHibernate"/>
      <add key="hibernate.connection.connection_string" value="Data Source=localhost\DBLocal; Initial Catalog=AMForwardDb; User ID=test; Password=test;"/> 
      <!--      <add key="hibernate.connection.connection_string" value="Data Source=localhost; Initial Catalog=AMForwardDb; User ID=test; Password=test;"/> --> 
      <add key="proxyfactory.factory_class" value="NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle"/>
    </config>
  </activeRecord>
  <AlwaysMoveForward>
    <DatabaseConfiguration ConnectionString="AnotherBlogDb" AdminConnectionString="AnotherBlogDb"/>
    <EmailConfiguration FromAddress="donotreply@alwaysmoveforward.com" SmtpServer="relay-hosting.secureserver.net" SmtpPort="25"/>
    <LoggingConfiguration Source="WebRole" Level="Verbose" LoggingClass="AlwaysMoveForward.Common.Utilities.DefaultLogger" LoggingAssembly="AlwaysMoveForward.Common" />
    <RepositoryConfiguration ManagerAssembly="AlwaysMoveForward.AnotherBlog.DataLayer.ActiveRecord" ManagerClass="AlwaysMoveForward.AnotherBlog.DataLayer.RepositoryManager" UnitOfWorkClass="AlwaysMoveForward.AnotherBlog.DataLayer.UnitOfWork"/>
    <!--<RepositoryConfiguration ManagerAssembly="AlwaysMoveForward.AnotherBlog.DataLayer" ManagerClass="AlwaysMoveForward.AnotherBlog.DataLayer.Repositories.RepositoryManager" UnitOfWorkClass="AlwaysMoveForward.AnotherBlog.DataLayer.UnitOfWork"/> -->
    <!--    <RepositoryConfiguration ManagerAssembly="AnotherBlog.Data.NHibernate" ManagerClass="AnotherBlog.Data.NHibernate.Repositories.RepositoryManager" UnitOfWorkClass="AnotherBlog.Data.NHibernate.UnitOfWork"/> -->
    <!--    <RepositoryConfiguration ManagerAssembly="AlwaysMoveForward.AnotherBlog.DataLayer" ManagerClass="AlwaysMoveForward.AnotherBlog.DataLayer.Repositories.RepositoryManager" UnitOfWorkClass="AlwaysMoveForward.AnotherBlog.DataLayer.UnitOfWork"/> -->
  </AlwaysMoveForward>
  <MOQ>
    <RepositoryConfiguration ManagerAssembly="AlwaysMoveForward.AnotherBlog.DataLayer.MOQ" ManagerClass="AlwaysMoveForward.AnotherBlog.DataLayer.RepositoryManager" UnitOfWorkClass="AlwaysMoveForward.AnotherBlog.DataLayer.UnitOfWork"/>
  </MOQ>
  <AnotherBlog>
    <WebSiteConfiguration UpdateDb="false" EnableSSL="false" DefaultSiteName="AlwaysMoveForward.com"/>
  </AnotherBlog>
  <log4net>
    <appender name="RollingFile" type="log4net.Appender.RollingFileAppender">
      <file value="Logs\\AnotherBlog.log"/>
      <appendToFile value="true"/>
      <rollingStyle value="Composite"/>
      <datePattern value="yyyyMMdd"/>
      <maxSizeRollBackups value="2"/>
      <maximumFileSize value="1MB"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger - %message %newline"/>
      </layout>
    </appender>
    <root>
      <level value="Debug"/>
      <appender-ref ref="RollingFile"/>
    </root>
    <logger name="NHibernate">
      <level value="ERROR" />
    </logger>
    <logger name="NHibernate.SQL">
      <level value="ERROR" />
    </logger>
  </log4net>
  <system.serviceModel>
        <bindings>
            <basicHttpBinding>
                <binding name="BasicHttpBinding_IBlogPostService" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
                    <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
                    <security mode="None">
                        <transport clientCredentialType="None" proxyCredentialType="None" realm=""/>
                        <message clientCredentialType="UserName" algorithmSuite="Default"/>
                    </security>
                </binding>
            </basicHttpBinding>
        </bindings>
        <client>
            <endpoint address="http://localhost:1305/BlogPosts/BlogPostService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IBlogPostService" contract="BlogPostReference.IBlogPostService" name="BasicHttpBinding_IBlogPostService"/>
        </client>
    </system.serviceModel>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup></configuration>
