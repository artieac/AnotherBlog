@model AlwaysMoveForward.AnotherBlog.Web.Models.BlogModels.BlogPostModel
           
@using AlwaysMoveForward.AnotherBlog.Common.DomainModel;
@using AlwaysMoveForward.AnotherBlog.Web.Code.Utilities;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = AlwaysMoveForward.AnotherBlog.Web.MvcApplication.SiteInfo.Name + " - " + Model.BlogCommon.TargetBlog.Name + " - " + Model.Post.Title;
    ViewBag.Description = Model.Post.ShortEntryText;
    ViewBag.Common = Model.BlogCommon.Common;
    ViewBag.BlogCommon = Model.BlogCommon;
}

@section headerPlugins
{

}
<div class="bodyContent">        
    <div class="blogEntrySection">
        <div>
            <div class="blogTitleSection">
                <div class="blogTitle">
                    <label>@Model.Post.Title</label>
                    <div class="blogSubTitle">by @Model.Author.GetDisplayName() on @Model.Post.DatePosted.ToShortDateString()</div>
                </div>
            </div>
<!--
            <div style="float:right;display:block">
                <script src="http://digg.com/tools/diggthis.js" type="text/javascript"></script> 
            </div>
-->
        </div>
        <br />
        <div class="blogText">@Html.Raw(@Model.Post.EntryText)</div>
        <br />
        <div class="blogTags">
            <label>tags: </label>
            @foreach (Tag tag in Model.Tags)
            {
                <a href="/@Model.BlogCommon.TargetBlog.SubFolder/Blog/Index/tag/@tag.Name">@tag.Name</a><text>,</text>
            }
        </div>
        <br />
        <div style="float:left;width:49%;">
        @if (Model.PreviousEntry != null)
        { 
            <a href="@Utils.GenerateBlogEntryLink(Model.BlogCommon.TargetBlog.SubFolder, Model.PreviousEntry, false)">@Model.PreviousEntry.Title</a>
        }
        </div> 
        <div style="float:right;text-align:right;">
        @if(Model.NextEntry != null)
        { 
            <a href="@Utils.GenerateBlogEntryLink(Model.BlogCommon.TargetBlog.SubFolder, Model.NextEntry, false)">@Model.NextEntry.Title</a>
        } 
        </div>
        <br /><br />
        <div style="padding-left:10px;width:90%" id="commentSection" name="commentSection" ng-controller="BlogController">                    
            @Html.Partial("ViewComments", Model.Post.Id)
            <br /> 
            <form id="submitCommentForm" name="submitCommentForm" action='/@Model.BlogCommon.TargetBlog.SubFolder/Blog/SaveComment' method="post" novalidate >
                <label>Leave a comment</label>
                <br />
                <label>Note: Unapproved commenters must wait to see their comments</label>
                @{
                    String authorName = "";
                    String authorEmail = "";
                
                    AlwaysMoveForward.AnotherBlog.BusinessLayer.Utilities.SecurityPrincipal currentPrincipal = System.Threading.Thread.CurrentPrincipal as AlwaysMoveForward.AnotherBlog.BusinessLayer.Utilities.SecurityPrincipal;

                    if (currentPrincipal != null)
                    {
                        if (currentPrincipal.IsAuthenticated == true)
                        {
                            if (currentPrincipal.CurrentUser != null)
                            {
                                authorName = currentPrincipal.CurrentUser.GetDisplayName();
  //                              authorEmail = currentPrincipal.CurrentUser.Email;
                            }
                        }
                    }
                }
                <div>
                    <div class="inputTitle">name:</div>
                    <span>
                        <input type="text" id="authorName" name="authorName" value="@authorName" ng-model="newComment.authorName" required/>
                        <span ng-show="submitCommentForm.authorName.$invalid" class="errorMessage">*</span>
                    </span>
                </div>
                <div>
                    <div class="inputTitle">email:</div>
                    <span>
                        <input type="email" id="authorEmail" name="authorEmail" value="@authorEmail" ng-model="newComment.authorEmail" required/>
                        <span ng-show="submitCommentForm.authorEmail.$invalid">
                            <span ng-show="submitCommentForm.authorEmail.$error.required" class="errorMessage">*</span>
                            <span ng-show="submitCommentForm.authorEmail.$error.email" class="errorMessage">This is not a valid email.</span>
                        </span>
                    </span>
                </div>
                <div>
                    <div class="inputTitle">url:</div>
                    <span>
                        <input type="url" id="commentLink" name="commentLink" ng-model="newComment.commentLink"/>
                        <span ng-show="submitCommentForm.commentLink.$error.url" class="errorMessage">This is not a valid url.</span>                        
                    </span>
                </div>
                <div>
                    <div>comment:</div>
                    <span>
                        <td colspan="2"><textarea class="commentAreaInput" id="commentText" name="commentText" cols="40" rows="5" ng-model="newComment.commentText"></textarea></td>
                    </span>
                </div>
                <input type="hidden" id="entryId" name="entryId" value="@Model.Post.Id.ToString()" ng-model="newComment.entryId"/>
                <input type="hidden" id="blogName" name="blogName" value="@Model.BlogCommon.TargetBlog.Name" />                
                <button type="button" class="btn btn-primary" id="submitCommentButton" ng-click="submitComment('@ViewBag.BlogSubFolder', '@Model.Post.Id.ToString()');"  ng-disabled="submitCommentForm.$invalid">Submit Comment</button>
            </form>
        </div>
    </div>
</div>

